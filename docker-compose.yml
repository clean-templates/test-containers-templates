version: '3.7'
services:
  consul:
    container_name: consul
    hostname: consul
    image: consul:1.11.3
    ports:
      - "8500:8500"
    restart: always
    networks:
      - app

  postgres:
    container_name: postgres-order
    image: postgres:13.5
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass213
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - app
    restart: unless-stopped

  order-service:
    image: order-service:1.0.0
    ports:
      - "8080:8080"
    build:
      context: ./order-service
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - app

  notification-service:
    image: notification-service:1.0.0
    ports:
      - "8999:8999"
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - app

  delivery-service:
    image: delivery-service:1.0.0
    ports:
      - "8081:8081"
    build:
      context: ./delivery-service
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - app

  rabbitmq:
    image: rabbitmq:3.9.11-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    networks:
      - app

networks:
  app:
    driver: bridge

volumes:
  postgres:
  rabbitmq: